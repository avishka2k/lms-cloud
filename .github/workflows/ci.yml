name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - config-server
          - user-service
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-southeast-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'oracle'
      
      - name: Chache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn -f ${{ matrix.service }}/pom.xml clean install -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2 -DskipTests=true

      - name: Run tests
        run: mvn -f ${{ matrix.service }}/pom.xml test -DskipTests=true

      # - name: SonarCloud Scan
      #   run: mvn -f ${{ matrix.service }}/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=avishka2k_lms-microservices
      
      - name: Package Cleaned Code
        run: mvn -f ${{ matrix.service }}/pom.xml package -DskipTests=true
      
      - name: Publish to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-artifact
          path: ${{ matrix.service }}/target/*.jar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # - name: Login to AWS CodeArtifact
      #   run: aws codeartifact login --tool maven --domain lms-microservices --domain-owner 975050073113 --repository lms-artifact
      #   env:
      #     AWS_REGION: ${{ env.AWS_REGION }}

      # - name: Publish to AWS CodeArtifact
      #   run: mvn -f ${{ matrix.service }}/pom.xml deploy
      #   env:
      #     AWS_REGION: ${{ env.AWS_REGION }}
          